console.log('number' + 3 + 3) 
/* выведет number33, так как код будет идти по порядку, 
сначала сделает number3 и потом еще добавит 3 и получится number33 
console.log() */
console.log(null+3) 
/* выведет 3,  потомучто переведет null в 0 и добавит 3*/
console.log(5 && "qwerty")
/* qwerty, так как оба значения тру, то вернеться второй операнд*/
console.log(+'40' + +'2' + "hillel")
/* выведет 42hillel - сначала + сделает из стринги намбер 40 
и так же с 2 и сложит их, затем будет конкактенация с стрингой hillel*/
console.log('10' - 5 === 6)
/* выведет false, сначала из 10 стринг, сделает намбер и отнимет 5, 
получим 5 и это не равно 6, хотя и тип данных одинаковый */
console.log(true + false)
/* выведет 1, так как из true сделает 1, а из false сделает 0 */
console.log('4px' - 3)
/* Nan - так как при переводе стринги '4px' в намбер получим NaN */
console.log('4' - 3)
/* 1 - потомучто автоматически сделает из стринги 4 - намбер*/
console.log('6' + 3 ** 0)
/* 61 - потомучто в приорите возведение в степень и мы там получим 1 и дальше сработает
конкатенация из за оператора + */
console.log(12 / '6')
/* 2 - потомучто из за оператора / это будет восприниматься как математическая операция и 
следовательно строка 6 будет переведена в намбер  */
console.log('10' + (5 === 6))
/* 10false - потомучто стринга сложится с false путем конкатенации */
console.log(null == '')
/* false, так как null и пустая строка считаются разными значениями*/
console.log(3 ** (9 / 3))
/* 27 - сначала 9 делим на 3 и получаем 3 и затем 3 возводим в третью степень */
console.log(!!'false' == !!'true')
/* true - так как с обеих сторон не пустые строки */
console.log(0 || '0' && 1)
/* 1, потому что строк и 1 это тру, вернется 1, а дальше сравнивает 0 и 1, 
так как 0 это фолси, то переходит к 1 и возвращает его */
console.log((+null == false) < 1)
/* false, в скобках мы получим тру, так как 0 == 0, далее тру преобразуется в 1 
и получаем false потомучто 1 равно 1, а не меньше */
console.log(false && true || true)
/* true, сначала получаем фолс, а дальше тру потому что один из операндов тру */
console.log(false && (false || true))
/* false, сначала получаем в скобках тру, а дальше фолс потому что один из операндов фолс, а второй тру */
console.log((+null == false) < 1 ** 5)
/* false, +null становится 0 и false становится 0, посре сравнения 0 и 0, получаем тру.
1 в степени 5 равно 1, тру преобразовывается в 1 и при сравнение 1 < 1, получаем false */